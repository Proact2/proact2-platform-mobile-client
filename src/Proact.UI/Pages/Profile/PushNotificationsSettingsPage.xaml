<?xml version="1.0" encoding="UTF-8" ?>
<views:MvxContentPage
    x:Class="Proact.UI.Pages.PushNotificationsSettingsPage"
    xmlns="http://xamarin.com/schemas/2014/forms"
    xmlns:x="http://schemas.microsoft.com/winfx/2009/xaml"
    xmlns:converters="clr-namespace:Proact.UI.Converters"
    xmlns:core="clr-namespace:Proact.Mobile.Core;assembly=Proact.Mobile.Core"
    xmlns:fontawesome="clr-namespace:FontAwesome"
    xmlns:local="clr-namespace:Proact.UI"
    xmlns:mvx="clr-namespace:MvvmCross.Forms.Bindings;assembly=MvvmCross.Forms"
    xmlns:viewModels="clr-namespace:Proact.Mobile.Core.ViewModels;assembly=Proact.Mobile.Core"
    xmlns:views="clr-namespace:MvvmCross.Forms.Views;assembly=MvvmCross.Forms"
    Title="{core:Translate NotificationSettingsPageTitle}"
    x:TypeArguments="viewModels:PushNotificationsSettingsViewModel"
    BackgroundColor="{x:DynamicResource EditorPageBackgroundColor}"
    NavigationPage.HasNavigationBar="True">

    <ContentPage.Resources>
        <ResourceDictionary>
            <converters:NativeInverseBoolConverter x:Key="InverseBoolConverter" />
        </ResourceDictionary>
    </ContentPage.Resources>

    <ContentPage.Content>
        <Grid Padding="10" RowSpacing="10">

            <Grid.RowDefinitions>
                <RowDefinition Height="auto" />
                <RowDefinition Height="auto" />
                <RowDefinition Height="auto" />
                <RowDefinition Height="auto" />
                <RowDefinition Height="*" />
                <RowDefinition Height="auto" />
                <RowDefinition Height="auto" />
            </Grid.RowDefinitions>

            <StackLayout Grid.Row="0" Spacing="10">
                <Label
                    Padding="10,0"
                    Style="{x:DynamicResource PrimaryRegularLabelStyle}"
                    Text="{core:Translate NotificationsTimeFrom}" />
                <TimePicker
                    BackgroundColor="{x:DynamicResource EditorPageBackgroundColor}"
                    FontSize="20"
                    TextColor="{x:StaticResource SecondaryTextColor}"
                    Time="{Binding StartAt}" />
                <BoxView BackgroundColor="{x:StaticResource DividerColor}" HeightRequest="1">
                    <BoxView.IsVisible>
                        <OnPlatform
                            x:TypeArguments="x:Boolean"
                            Android="False"
                            iOS="True" />
                    </BoxView.IsVisible>
                </BoxView>
            </StackLayout>
            <StackLayout Grid.Row="1" Spacing="10">
                <Label
                    Padding="10,0"
                    Style="{x:DynamicResource PrimaryRegularLabelStyle}"
                    Text="{core:Translate NotificationsTimeTo}" />
                <TimePicker
                    BackgroundColor="{x:DynamicResource EditorPageBackgroundColor}"
                    FontSize="20"
                    TextColor="{x:StaticResource SecondaryTextColor}"
                    Time="{Binding StopAt}" />
                <BoxView BackgroundColor="{x:StaticResource DividerColor}" HeightRequest="1">
                    <BoxView.IsVisible>
                        <OnPlatform
                            x:TypeArguments="x:Boolean"
                            Android="False"
                            iOS="True" />
                    </BoxView.IsVisible>
                </BoxView>
            </StackLayout>

            <Label
                Grid.Row="2"
                FontSize="12"
                Style="{x:DynamicResource SecondaryRegularLabelStyle}"
                Text="{core:Translate NotificationSettingsInfo}" />

            <Label
                Grid.Row="3"
                IsVisible="{Binding ErrorIsVisible}"
                Style="{x:StaticResource ErrorLabelStyle}"
                Text="{core:Translate PushNotificationsSettingsValidateError}" />

            <Button
                Grid.Row="5"
                Command="{Binding SaveCommand}"
                Style="{x:StaticResource MainButtonStyle}"
                Text="{core:Translate Save}" />

            <Button
                Grid.Row="6"
                Command="{Binding RemoveTimeLimitCommand}"
                IsVisible="{Binding SettingsModel.AllDay, Converter={StaticResource InverseBoolConverter}}"
                Style="{x:StaticResource TextOnlyButtonStyle}"
                Text="{core:Translate RemovePushNotificationTimeLimit}"
                TextColor="{x:DynamicResource SecondaryTextColor}" />

        </Grid>
    </ContentPage.Content>
</views:MvxContentPage>
