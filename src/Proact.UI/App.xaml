<?xml version="1.0" encoding="utf-8" ?>
<Application
    x:Class="Proact.UI.App"
    xmlns="http://xamarin.com/schemas/2014/forms"
    xmlns:x="http://schemas.microsoft.com/winfx/2009/xaml"
    xmlns:local="clr-namespace:Proact.UI"
    xmlns:models="clr-namespace:Proact.Mobile.Core.Models;assembly=Proact.Mobile.Core"
    xmlns:resources="clr-namespace:Proact.UI.Resources">
    <Application.Resources>

        <!--  Common values  -->

        <x:Double x:Key="ReplyAuthorTextFontSize">14</x:Double>

        <x:Double x:Key="ReplyMessageTextFontSize">16</x:Double>

        <x:Double x:Key="ReplyMediaDurationTextFontSize">14</x:Double>

        <OnIdiom x:Key="MessageCellPadding" x:TypeArguments="Thickness">
            <OnIdiom.Phone>0,0,0,25</OnIdiom.Phone>
            <OnIdiom.Tablet>100,0,100,25</OnIdiom.Tablet>
        </OnIdiom>

        <OnIdiom x:Key="SearchMessageCellPadding" x:TypeArguments="Thickness">
            <OnIdiom.Phone>0,0,0,10</OnIdiom.Phone>
            <OnIdiom.Tablet>100,0,100,10</OnIdiom.Tablet>
        </OnIdiom>

        <OnIdiom x:Key="MessageMoodButtonSize" x:TypeArguments="x:Double">
            <OnIdiom.Phone>80</OnIdiom.Phone>
            <OnIdiom.Tablet>120</OnIdiom.Tablet>
        </OnIdiom>

          <OnIdiom x:Key="CellPadding" x:TypeArguments="Thickness">
            <OnIdiom.Phone>10</OnIdiom.Phone>
            <OnIdiom.Tablet>100,10,100,10</OnIdiom.Tablet>
        </OnIdiom>

        <!--  Font Awesome  -->

        <OnPlatform x:Key="FontAwesomeBrands" x:TypeArguments="x:String">
            <On Platform="Android" Value="FontAwesome5BrandsRegular.otf#Regular" />
            <On Platform="iOS" Value="FontAwesome5Brands-Regular" />
        </OnPlatform>

        <OnPlatform x:Key="FontAwesomeSolid" x:TypeArguments="x:String">
            <On Platform="Android" Value="FontAwesome5Solid.otf#Regular" />
            <On Platform="iOS" Value="FontAwesome5Free-Solid" />
        </OnPlatform>

        <OnPlatform x:Key="FontAwesomeRegular" x:TypeArguments="x:String">
            <On Platform="Android" Value="FontAwesome5Regular.otf#Regular" />
            <On Platform="iOS" Value="FontAwesome5Free-Regular" />
        </OnPlatform>

        <!--  Font poppins  -->

        <OnPlatform x:Key="PoppinsRegular" x:TypeArguments="x:String">
            <On Platform="Android" Value="Poppins-Regular.ttf#Regular" />
            <On Platform="iOS" Value="Poppins-Regular" />
        </OnPlatform>

        <OnPlatform x:Key="PoppinsLight" x:TypeArguments="x:String">
            <On Platform="Android" Value="Poppins-Light.ttf#Light" />
            <On Platform="iOS" Value="Poppins-Light" />
        </OnPlatform>

        <OnPlatform x:Key="PoppinsMedium" x:TypeArguments="x:String">
            <On Platform="Android" Value="Poppins-Medium.ttf#Medium" />
            <On Platform="iOS" Value="Poppins-Medium" />
        </OnPlatform>

        <OnPlatform x:Key="PoppinsSemiBold" x:TypeArguments="x:String">
            <On Platform="Android" Value="Poppins-SemiBold.ttf#SemiBold" />
            <On Platform="iOS" Value="Poppins-SemiBold" />
        </OnPlatform>

        <OnPlatform x:Key="PoppinsBold" x:TypeArguments="x:String">
            <On Platform="Android" Value="Poppins-Bold.ttf#Bold" />
            <On Platform="iOS" Value="Poppins-Bold" />
        </OnPlatform>

        <!--  Style  -->

        <Style TargetType="NavigationPage">
            <Setter Property="BarBackgroundColor" Value="{DynamicResource NavigationBarColor}" />
            <Setter Property="BarTextColor" Value="{DynamicResource NavigationBarTextColor}" />
        </Style>

        <Style x:Key="PageStyle" TargetType="ContentPage">
            <Setter Property="BackgroundColor" Value="{DynamicResource PageBackgroundColor}" />
            <Setter Property="Visual" Value="Material" />
        </Style>

        <Style
            x:Key="SigninPageStyle"
            BasedOn="{StaticResource PageStyle}"
            TargetType="ContentPage">
            <Setter Property="BackgroundColor" Value="White" />
        </Style>

        <!--  Label  -->

        <Style x:Key="TitleLabelStyle" TargetType="Label">
            <Setter Property="FontFamily" Value="{DynamicResource PoppinsMedium}" />
            <Setter Property="TextColor" Value="{DynamicResource PrimaryTextColor}" />
            <Setter Property="FontSize" Value="Title" />
        </Style>

        <Style x:Key="BodyLabelStyle" TargetType="Label">
            <Setter Property="FontFamily" Value="{DynamicResource PoppinsRegular}" />
            <Setter Property="TextColor" Value="{DynamicResource PrimaryTextColor}" />
            <Setter Property="FontSize" Value="Body" />
        </Style>

        <Style x:Key="SubtitleLabelStyle" TargetType="Label">
            <Setter Property="FontFamily" Value="{DynamicResource PoppinsRegular}" />
            <Setter Property="TextColor" Value="{DynamicResource SecondaryTextColor}" />
            <Setter Property="FontSize" Value="15" />
        </Style>

        <Style x:Key="HeadlineLabelStyle" TargetType="Label">
            <Setter Property="FontFamily" Value="{DynamicResource PoppinsMedium}" />
            <Setter Property="TextColor" Value="{DynamicResource PrimaryTextColor}" />
            <Setter Property="FontSize" Value="16" />
        </Style>

        <Style x:Key="HeadlineBoldLabelStyle" TargetType="Label">
            <Setter Property="FontFamily" Value="{DynamicResource PoppinsBold}" />
            <Setter Property="TextColor" Value="{DynamicResource PrimaryTextColor}" />
            <Setter Property="FontSize" Value="20" />
        </Style>

        <Style x:Key="ErrorLabelStyle" TargetType="Label">
            <Setter Property="FontSize" Value="12" />
            <Setter Property="FontFamily" Value="{DynamicResource PoppinsRegular}" />
            <Setter Property="TextColor" Value="{x:DynamicResource ErrorTextColor}" />
        </Style>

        <Style x:Key="SecondaryRegularLabelStyle" TargetType="Label">
            <Setter Property="FontFamily" Value="{DynamicResource PoppinsRegular}" />
            <Setter Property="TextColor" Value="{DynamicResource SecondaryTextColor}" />
        </Style>

        <Style x:Key="SecondaryLightLabelStyle" TargetType="Label">
            <Setter Property="FontFamily" Value="{DynamicResource PoppinsLight}" />
            <Setter Property="TextColor" Value="{DynamicResource SecondaryTextColor}" />
        </Style>

        <Style x:Key="SecondaryMediumLabelStyle" TargetType="Label">
            <Setter Property="FontFamily" Value="{DynamicResource PoppinsMedium}" />
            <Setter Property="TextColor" Value="{DynamicResource SecondaryTextColor}" />
        </Style>

        <Style x:Key="SecondarySemiBoldLabelStyle" TargetType="Label">
            <Setter Property="FontFamily" Value="{DynamicResource PoppinsSemiBold}" />
            <Setter Property="TextColor" Value="{DynamicResource SecondaryTextColor}" />
        </Style>

        <Style x:Key="SecondaryBoldLabelStyle" TargetType="Label">
            <Setter Property="FontFamily" Value="{DynamicResource PoppinsBold}" />
            <Setter Property="TextColor" Value="{DynamicResource SecondaryTextColor}" />
        </Style>

        <Style x:Key="PrimaryRegularLabelStyle" TargetType="Label">
            <Setter Property="FontFamily" Value="{DynamicResource PoppinsRegular}" />
            <Setter Property="TextColor" Value="{DynamicResource PrimaryTextColor}" />
        </Style>

        <Style x:Key="PrimaryMediumLabelStyle" TargetType="Label">
            <Setter Property="FontFamily" Value="{DynamicResource PoppinsMedium}" />
            <Setter Property="TextColor" Value="{DynamicResource PrimaryTextColor}" />
        </Style>

        <Style x:Key="PrimarySemiBoldLabelStyle" TargetType="Label">
            <Setter Property="FontFamily" Value="{DynamicResource PoppinsSemiBold}" />
            <Setter Property="TextColor" Value="{DynamicResource PrimaryTextColor}" />
        </Style>

        <!--  Entry Style  -->

        <Style x:Key="EntryStyle" TargetType="Entry">
            <Setter Property="Visual" Value="Material" />
            <Setter Property="BackgroundColor" Value="Transparent" />
            <Setter Property="TextColor" Value="{x:DynamicResource PrimaryTextColor}" />
            <Setter Property="PlaceholderColor" Value="{x:DynamicResource SecondaryTextColor}" />
        </Style>

        <Style x:Key="EditorStyle" TargetType="Editor">
            <Setter Property="Visual" Value="Material" />
            <Setter Property="BackgroundColor" Value="Transparent" />
            <Setter Property="TextColor" Value="{x:DynamicResource PrimaryTextColor}" />
            <Setter Property="PlaceholderColor" Value="{x:DynamicResource SecondaryTextColor}" />
        </Style>

        <!--  Buttons Style  -->

        <Style x:Key="MainButtonStyle" TargetType="Button">
            <Setter Property="Visual" Value="Material" />
            <Setter Property="HorizontalOptions" Value="Center" />
            <Setter Property="BackgroundColor" Value="{DynamicResource SecondaryColor}" />
            <Setter Property="TextColor" Value="{DynamicResource TextOnSecondaryColor}" />
            <Setter Property="HeightRequest" Value="50" />
            <Setter Property="WidthRequest" Value="290" />
            <Setter Property="CornerRadius" Value="20" />
            <Setter Property="FontSize" Value="Body" />
            <Setter Property="IsEnabled" Value="True" />
            <Setter Property="FontFamily" Value="{DynamicResource PoppinsMedium}" />
        </Style>

        <Style
            x:Key="MainButtonDisabledStyle"
            BasedOn="{x:StaticResource MainButtonStyle}"
            TargetType="Button">
            <Setter Property="IsEnabled" Value="False" />
            <Setter Property="TextColor" Value="Transparent" />
            <Setter Property="Opacity" Value="0.5" />
        </Style>

        <Style
            x:Key="LandingButtonStyle"
            BasedOn="{x:StaticResource MainButtonStyle}"
            TargetType="Button">
            <Setter Property="TextColor" Value="White" />
            <Setter Property="BackgroundColor" Value="{DynamicResource PrimaryDarkColor}" />
        </Style>

        <Style
            x:Key="LandingButtonDisabledStyle"
            BasedOn="{x:StaticResource LandingButtonStyle}"
            TargetType="Button">
            <Setter Property="IsEnabled" Value="False" />
            <Setter Property="TextColor" Value="Transparent" />
            <Setter Property="Opacity" Value="0.5" />
        </Style>

        <Style
            x:Key="FacebookButtonStyle"
            BasedOn="{x:StaticResource MainButtonStyle}"
            TargetType="Button">
            <Setter Property="TextColor" Value="White" />
            <Setter Property="BackgroundColor" Value="#3B5998" />
        </Style>

        <Style
            x:Key="GoogleButtonStyle"
            BasedOn="{x:StaticResource MainButtonStyle}"
            TargetType="Button">
            <Setter Property="TextColor" Value="DarkGray" />
            <Setter Property="BackgroundColor" Value="White" />
        </Style>

        <Style
            x:Key="TextOnlyButtonStyle"
            BasedOn="{x:StaticResource MainButtonStyle}"
            TargetType="Button">
            <Setter Property="BackgroundColor" Value="Transparent" />
            <Setter Property="TextColor" Value="{x:DynamicResource PrimaryColor}" />
            <Setter Property="BorderColor" Value="Transparent" />
            <Setter Property="BorderWidth" Value="0" />
            <Setter Property="Visual" Value="Default" />
        </Style>
        
        <Style
            x:Key="OutlineButtonStyle"
            BasedOn="{x:StaticResource MainButtonStyle}"
            TargetType="Button">
            <Setter Property="BackgroundColor" Value="Transparent" />
            <Setter Property="TextColor" Value="{x:DynamicResource SecondaryTextColor}" />
            <Setter Property="BorderColor" Value="{x:DynamicResource SecondaryTextColor}" />
            <Setter Property="BorderWidth" Value="1" />
            <Setter Property="Visual" Value="Default" />
        </Style>

        <Style x:Key="FullRoundCornerButtonStyle" TargetType="Button">
            <Setter Property="Visual" Value="Material" />
            <Setter Property="HorizontalOptions" Value="FillAndExpand" />
            <Setter Property="TextColor" Value="White" />
            <Setter Property="BackgroundColor" Value="Black" />
            <Setter Property="HeightRequest" Value="60" />
            <Setter Property="CornerRadius" Value="30" />
            <!--<Setter Property="FontFamily" Value="{x:StaticResource GibsonRegular}"/>-->
        </Style>

        <Style x:Key="FloatingActionButtonStyle" TargetType="Button">
            <Setter Property="Visual" Value="Material" />
            <Setter Property="HorizontalOptions" Value="FillAndExpand" />
            <Setter Property="VerticalOptions" Value="End" />
            <Setter Property="TextColor" Value="White" />
            <Setter Property="BackgroundColor" Value="{x:DynamicResource SecondaryColor}" />
            <Setter Property="HeightRequest" Value="60" />
            <Setter Property="WidthRequest" Value="60" />
            <Setter Property="CornerRadius" Value="30" />
            <Setter Property="Margin" Value="20" />
            <Setter Property="FontSize" Value="12" />
        </Style>

        <Style x:Key="FontIconButtonStyle" TargetType="Button">
            <Setter Property="HorizontalOptions" Value="Start" />
            <Setter Property="VerticalOptions" Value="Center" />
            <Setter Property="BackgroundColor" Value="Transparent" />
            <Setter Property="TextColor" Value="{x:DynamicResource PrimaryTextColor}" />
            <Setter Property="HeightRequest" Value="42" />
            <Setter Property="WidthRequest" Value="42" />
            <Setter Property="CornerRadius" Value="21" />
            <Setter Property="Margin" Value="10,0" />
            <Setter Property="FontSize" Value="22" />
            <Setter Property="FontFamily" Value="{x:StaticResource FontAwesomeSolid}" />
        </Style>

         <Style x:Key="FontIconRegularButtonStyle" BasedOn="{x:StaticResource FontIconButtonStyle}" TargetType="Button">
            <Setter Property="FontFamily" Value="{x:StaticResource FontAwesomeRegular}" />
        </Style>


        <!--  Activity indicators style  -->

        <Style x:Key="ActivityIndicatorStyle" TargetType="ActivityIndicator">
            <Setter Property="VerticalOptions" Value="Center" />
            <Setter Property="HorizontalOptions" Value="Center" />
            <Setter Property="HeightRequest" Value="32" />
            <Setter Property="WidthRequest" Value="32" />
            <Setter Property="Visual" Value="Default" />
            <Setter Property="Color" Value="{x:DynamicResource SecondaryTextColor}" />
        </Style>

        <Style
            x:Key="MainButtonActivityIndicator"
            BasedOn="{x:StaticResource ActivityIndicatorStyle}"
            TargetType="ActivityIndicator">
            <Setter Property="TranslationX" Value="80" />
        </Style>

        <!--  Elevetion overlay  -->

        <Style x:Key="OverlayFrame" TargetType="Frame">
            <Setter Property="Visual" Value="Material" />
            <Setter Property="CornerRadius" Value="12" />
            <Setter Property="BackgroundColor" Value="{x:DynamicResource ElevationOverlayBackgroundColor}" />
        </Style>

        <!--  Font icon label  -->

        <Style x:Key="FontIconStyle" TargetType="Label">
            <Setter Property="VerticalTextAlignment" Value="Center" />
            <Setter Property="HorizontalTextAlignment" Value="Center" />
            <Setter Property="VerticalOptions" Value="Center" />
            <Setter Property="HorizontalOptions" Value="Center" />
            <Setter Property="FontSize" Value="18" />
            <Setter Property="TextColor" Value="{x:DynamicResource SecondaryColor}" />
            <Setter Property="FontFamily" Value="{x:StaticResource FontAwesomeSolid}" />
        </Style>

        <Style
            x:Key="FontIconStyleRegular"
            BasedOn="{x:StaticResource FontIconStyle}"
            TargetType="Label">
            <Setter Property="FontFamily" Value="{x:StaticResource FontAwesomeRegular}" />
        </Style>

        <!--  Message wall style  -->

        <Style x:Key="MessageAuthorStyle" TargetType="Label">
            <Setter Property="FontFamily" Value="{DynamicResource PoppinsBold}" />
            <Setter Property="TextColor" Value="{DynamicResource PrimaryTextColor}" />
            <Setter Property="FontSize" Value="16" />
            <Setter Property="HeightRequest" Value="27" />
            <Setter Property="LineBreakMode" Value="TailTruncation" />
        </Style>

        <Style x:Key="MessageDatetimeStyle" TargetType="Label">
            <Setter Property="FontFamily" Value="{DynamicResource PoppinsMedium}" />
            <Setter Property="TextColor" Value="{DynamicResource SecondaryTextColor}" />
            <Setter Property="FontSize" Value="11" />
            <Setter Property="HeightRequest" Value="15" />
        </Style>

        <Style x:Key="MessageTitleTextStyle" TargetType="Label">
            <Setter Property="FontFamily" Value="{DynamicResource PoppinsMedium}" />
            <Setter Property="TextColor" Value="{DynamicResource SecondaryTextColor}" />
            <Setter Property="FontSize" Value="20" />
            <Setter Property="VerticalOptions" Value="StartAndExpand" />
        </Style>

        <Style x:Key="MessageTextStyle" TargetType="Label">
            <Setter Property="FontFamily" Value="{DynamicResource PoppinsRegular}" />
            <Setter Property="TextColor" Value="{DynamicResource SecondaryTextColor}" />
            <Setter Property="FontSize" Value="20" />
            <Setter Property="VerticalOptions" Value="StartAndExpand" />
        </Style>

        <Style
            x:Key="ShowAllMessageLabelTextStyle"
            BasedOn="{x:StaticResource SecondarySemiBoldLabelStyle}"
            TargetType="Label">
            <Setter Property="TextColor" Value="{DynamicResource PrimaryColor}" />
            <Setter Property="FontSize" Value="14" />
            <Setter Property="VerticalTextAlignment" Value="Center" />
            <Setter Property="HorizontalTextAlignment" Value="Center" />
            <Setter Property="HeightRequest" Value="30" />
            <Setter Property="BackgroundColor" Value="White" />
        </Style>

        <Style x:Key="SeparatorStyle" TargetType="BoxView">
            <Setter Property="Color" Value="{DynamicResource SeparatorColor}" />
        </Style>
        
        <!--  Analysis styles -->

        <Style x:Key="AnalysisAuthorStyle" TargetType="Label">
            <Setter Property="FontFamily" Value="{DynamicResource PoppinsSemiBold}" />
            <Setter Property="TextColor" Value="{DynamicResource PrimaryTextColor}" />
            <Setter Property="FontSize" Value="14" />
            <Setter Property="HeightRequest" Value="20" />
            <Setter Property="LineBreakMode" Value="TailTruncation" />
        </Style>

        <Style x:Key="AnalysisDatetimeStyle" TargetType="Label">
            <Setter Property="FontFamily" Value="{DynamicResource PoppinsRegular}" />
            <Setter Property="TextColor" Value="{DynamicResource SecondaryTextColor}" />
            <Setter Property="FontSize" Value="12" />
            <Setter Property="HeightRequest" Value="20" />
        </Style>
        

        <!--  Message Viewcell Data templates  -->

        <DataTemplate x:Key="wallMessageViewCell" x:DataType="models:MessagesContainer">
            <local:WallMessageViewCell />
        </DataTemplate>
        <DataTemplate x:Key="broadcastMessageViewCell" x:DataType="models:MessagesContainer">
            <local:BroadcastMessageViewCell />
        </DataTemplate>
        <DataTemplate x:Key="wallMessageWithImageViewCell" x:DataType="models:MessagesContainer">
            <local:WallMessageWithImageViewCell />
        </DataTemplate>
        <DataTemplate x:Key="wallMessageWithVideoViewCell" x:DataType="models:MessagesContainer">
            <local:WallMessageWithVideoViewCell />
        </DataTemplate>
        <DataTemplate x:Key="wallMessageWithVoiceViewCell" x:DataType="models:MessagesContainer">
            <local:WallMessageWithVoiceViewCell />
        </DataTemplate>

        <local:WallMessagesTemplateSelector
            x:Key="messagesDataTemplateSelector"
            BroadcastMessageTemplate="{StaticResource broadcastMessageViewCell}"
            MessageTemplate="{StaticResource wallMessageViewCell}"
            MessageWithImageTemplate="{StaticResource wallMessageWithImageViewCell}"
            MessageWithVideoTemplate="{StaticResource wallMessageWithVideoViewCell}"
            MessageWithVoiceTemplate="{StaticResource wallMessageWithVoiceViewCell}" />

        <DataTemplate x:Key="replyMessage" x:DataType="models:MessageModel">
            <local:ReplyMessageContentView MaxLines="50" />
        </DataTemplate>

        <DataTemplate x:Key="replyMessageWithTextTruncation" x:DataType="models:MessageModel">
            <local:ReplyMessageContentView MaxLines="3" />
        </DataTemplate>

        <DataTemplate x:Key="replyMessageWithVideo" x:DataType="models:MessageModel">
            <local:ReplyMessageWithVideoContentView TapGesture="WITHOUT_GESTURE" />
        </DataTemplate>

        <DataTemplate x:Key="replyMessageWithVideoWithGesture" x:DataType="models:MessageModel">
            <local:ReplyMessageWithVideoContentView TapGesture="WITH_GESTURE" />
        </DataTemplate>

        <DataTemplate x:Key="replyMessageWithVoice" x:DataType="models:MessageModel">
            <local:ReplyMessageWithVoiceContentView TapGesture="WITHOUT_GESTURE" />
        </DataTemplate>

        <DataTemplate x:Key="replyMessageWithVoiceWithGesture" x:DataType="models:MessageModel">
            <local:ReplyMessageWithVoiceContentView TapGesture="WITH_GESTURE" />
        </DataTemplate>

        <DataTemplate x:Key="replyMessageWithImage" x:DataType="models:MessageModel">
            <local:ReplyMessageWithImageContentView MaxLines="3" TapGesture="WITHOUT_GESTURE" />
        </DataTemplate>

        <DataTemplate x:Key="replyMessageWithImageWithGesture" x:DataType="models:MessageModel">
            <local:ReplyMessageWithImageContentView MaxLines="50" TapGesture="WITH_GESTURE" />
        </DataTemplate>

        <local:ReplyMessagesTemplateSelector
            x:Key="replyMessagesDataTemplateSelector"
            MessageTemplate="{StaticResource replyMessageWithTextTruncation}"
            MessageWithImageTemplate="{StaticResource replyMessageWithImage}"
            MessageWithVideoTemplate="{StaticResource replyMessageWithVideo}"
            MessageWithVoiceTemplate="{StaticResource replyMessageWithVoice}" />

        <local:ReplyMessagesTemplateSelector
            x:Key="detailPageReplyMessagesDataTemplateSelector"
            MessageTemplate="{StaticResource replyMessage}"
            MessageWithImageTemplate="{StaticResource replyMessageWithImageWithGesture}"
            MessageWithVideoTemplate="{StaticResource replyMessageWithVideoWithGesture}"
            MessageWithVoiceTemplate="{StaticResource replyMessageWithVoiceWithGesture}" />

    </Application.Resources>

</Application>
